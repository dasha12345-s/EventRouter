{"ast":null,"code":"var _jsxFileName = \"/Users/daryaandcodestory/Desktop/react/eventRouter/frontend/src/pages/EventDetailPage.js\",\n  _s = $RefreshSig$();\nimport { json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventDetailPage() {\n  _s();\n  const data = useRouteLoaderData('eve');\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_s(EventDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventDetailPage;\nexport default EventDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + id, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'ERROR'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nexport async function action({\n  params,\n  request\n}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Could not delete event'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"EventDetailPage\");","map":{"version":3,"names":["json","redirect","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","method","ok","message","status","action","$RefreshReg$"],"sources":["/Users/daryaandcodestory/Desktop/react/eventRouter/frontend/src/pages/EventDetailPage.js"],"sourcesContent":["import { json, redirect, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from '../components/EventItem';\n\n\nfunction EventDetailPage(){\n  const data = useRouteLoaderData('eve');\n\n  return(\n    <EventItem event={data.event}/>\n    )\n}\n\nexport default EventDetailPage;\n\nexport async function loader({request, params}){\n\nconst id = params.eventId;\n  \nconst response = await fetch('http://localhost:8080/events/' + id,\n{method: request.method,});\n\nif (!response.ok){\nthrow json({message: 'ERROR'},{status: 500})\n} else {\n  return response\n}\n}\n\nexport async function action({params, request}) {\n  const eventId = params.eventId;\n  const response = await fetch('http://localhost:8080/events/' + eventId, {\n    method: request.method,\n  })\n\n  if (!response.ok){\n    throw json({message: 'Could not delete event'},{status: 500})\n    }\n      return redirect('/events')\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,QAAQ,EAAEC,kBAAkB,QAAQ,kBAAkB;AACrE,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,SAASC,eAAeA,CAAA,EAAE;EAAAC,EAAA;EACxB,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,KAAK,CAAC;EAEtC,oBACEG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEnC;AAACN,EAAA,CANQD,eAAe;EAAA,QACTJ,kBAAkB;AAAA;AAAAY,EAAA,GADxBR,eAAe;AAQxB,eAAeA,eAAe;AAE9B,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAC;EAE/C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO;EAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,EACjE;IAACI,MAAM,EAAEN,OAAO,CAACM;EAAO,CAAC,CAAC;EAE1B,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAC;IACjB,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAAO,CAAC,EAAC;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC5C,CAAC,MAAM;IACL,OAAOL,QAAQ;EACjB;AACA;AAEA,OAAO,eAAeM,MAAMA,CAAC;EAACT,MAAM;EAAED;AAAO,CAAC,EAAE;EAC9C,MAAMG,OAAO,GAAGF,MAAM,CAACE,OAAO;EAC9B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGF,OAAO,EAAE;IACtEG,MAAM,EAAEN,OAAO,CAACM;EAClB,CAAC,CAAC;EAEF,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAC;IACf,MAAMvB,IAAI,CAAC;MAACwB,OAAO,EAAE;IAAwB,CAAC,EAAC;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EAC7D;EACE,OAAOxB,QAAQ,CAAC,SAAS,CAAC;AAChC;AAAC,IAAAa,EAAA;AAAAa,YAAA,CAAAb,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}